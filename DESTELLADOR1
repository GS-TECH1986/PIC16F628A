//////// Program memory: 2048x14  Data RAM: 223  Stack: 8
//////// I/O: 16   Analog Pins: 0
//////// Data EEPROM: 128
//////// C Scratch area: 77   ID Location: 2000
//////// Fuses: NOWDT,WDT,PUT,NOPUT,LP,XT,HS,EC_IO,INTRC_IO,INTRC,RC_IO,RC
//////// Fuses: NOMCLR,MCLR,NOBROWNOUT,BROWNOUT,NOLVP,LVP,CPD,NOCPD,PROTECT
//////// Fuses: NOPROTECT
//////// 
/*;--------------------------------------------------------------------------------------------------------------;:;
;NOMBRE: DESTELLADOR MARINO
;FECHA: 22/06/18
;DEVICE: PIC16F628A
;https://github.com/GS-TECH1986/
;--------------------------------------------------------------------------------------------------------------


*/


#include <16F628A.h>
//#device ADC=10
#fuses NOMCLR,NOPUT,NOPROTECT,NOCPD,INTRC_IO,NOWDT
#use delay(internal=4MHz)

//#use fast_io(A)

//#device ADC=10


//#define LED PIN_A2
//#define DELAY 1000
#define   NC1   PIN_A0 //;NO CONECTION          (IN/OUT)            PIN 17
#define   NC2   PIN_A1//;NO CONECTION          (IN/OUT)            PIN 18
#define   NC3   PIN_A2//; NO CONNECTION                    (IN/OUT)         PIN 1
#define   NC4    PIN_A3//; NO CONNECTION                    (IN/OUT)            PIN 2
#define   DS1_3   PIN_A4//;                          (IN)             PIN     3  
#define   DS1_4 PIN_A5   //;                                (IN)             PIN 4
#define   DS1_1   PIN_A6//;                          (IN)             PIN     15 
#define   DS1_2 PIN_A7   //;                                (IN)             PIN 16
#define   SEG_B   PIN_B0 //;DS1_2                              (OUT)             PIN 13
#define   SEG_G   PIN_B1 //; INPUT                             (OUT)              PIN 12
#define   SEG_C    PIN_B2//; DS1_4                             (OUT)               PIN  11 
#define   SEG_D PIN_B3   // ; CN6_2, OP1                        (OUT)               PIN 10

#define   SEG_P   PIN_B4 //;DS1_2                              (OUT)             PIN 13
#define   SEG_E   PIN_B5 //; INPUT                             (OUT)              PIN 12
#define   SEG_F    PIN_B6//; DS1_4                             (OUT)               PIN  11 
#define   SEG_A  PIN_B7   // ;                        (OUT)               PIN 10

/* seg_a, seg_f, seg_e, seg_p,seg_d,seg_c,seg_g,seg_b
0  0b11101101
1  0b00000101
2  0b10101011
3  0b10001111
4  0b01000111
5  0b11001110
6  0b11101110
7  0b10000101
8  0b11101111
9  0b11001111 
a  0b10101111
b  0b01101110
c  0b11101000
d  0b00101111
e  0b11101011
f  0b11100010
*/



#byte  porta= 0x05
int NUM, read;

int8 DIG[16] = 0b11101101,0b00000101,  0b10101011, 0b10001111,  0b01000111,  0b11001110,  0b11101110,  0b10000101,  
0b11101111,  0b11001111 ,  0b10101111,  0b01101110,  0b11101000,  0b00101111,  0b11101011, 0b11100010;

//void k()

 

    
 
 
void main()
{
/*int8 DIG[16] = 0b01110011,0b00111111,0b01111000,0b01101101,0b01110011,0b00111111,0b01111000,0b01101101, 
               0b01110011,0b01110011,0b00111111,0b01111000,0b01101101,0b01110011,0b00111111,0b01111000;*/
 setup_comparator(NC_NC_NC_NC);
   setup_vref(FALSE);
   set_tris_a (0b11111111);
set_tris_b (0b00000000);
read=0;


OUTPUT_B(0b11111111);
delay_ms(1000);
         OUTPUT_B(0);
            
            delay_ms(1000);
            
            
            

while(TRUE)    
   {

num=~porta;



 if ( bit_test(num,5))    bit_set(read,0); else bit_clear(read,0);
 if ( bit_test(num,4))    bit_set( read,1); else bit_clear( read,1 );
  if ( bit_test(num,7))    bit_set( read,2 ); else bit_clear( read,2 );
   if ( bit_test(num,6))    bit_set( read,3 ); else bit_clear( read,3 );
   
   
   read= read&0x0f;
   switch (read)
   {

    case 0: OUTPUT_B(~DIG[0]);
            output_high(SEG_P);
            delay_ms(500);
            output_LOW(SEG_P);
            delay_ms(500);
            break;
case (1): OUTPUT_B(~DIG[1]);
            output_high(SEG_P);
            delay_ms(500);
            output_LOW(SEG_P);
            delay_ms(1000);
            break;
case (2):  OUTPUT_B(~DIG[2]);
            output_high(SEG_P);
            delay_ms(500);
            output_LOW(SEG_P);
            delay_ms(1500);
            break;
   

  case (3):  OUTPUT_B(~DIG[3]);
            output_high(SEG_P);
            delay_ms(500);
            output_LOW(SEG_P);
            delay_ms(2000);
            break;
   
   case (4): OUTPUT_B(~DIG[4]);
            output_high(SEG_P);
           delay_ms(1000);
           output_LOW(SEG_P);
           delay_ms(500);
            break;
   
   case 5:  OUTPUT_B(~DIG[5]);
            output_high(SEG_P);
            delay_ms(1000);
            output_LOW(SEG_P);
            delay_ms(1000);
            break;
            
   case (6):  OUTPUT_B(~DIG[6]);
            output_high(SEG_P);
            delay_ms(1000);
            output_LOW(SEG_P);
            delay_ms(1500);
            break;
   
   case (7):  OUTPUT_B(~DIG[7]);
            output_high(SEG_P);
            delay_ms(1000);
            output_LOW(SEG_P);
            delay_ms(2000);
            break;
            
   case (8):  OUTPUT_B(~DIG[8]);
            output_high(SEG_P);
            delay_ms(1500);
            output_LOW(SEG_P);
            delay_ms(500);
            break;
            
   case (9):  OUTPUT_B(~DIG[9]);
            output_high(SEG_P);
            delay_ms(1500);
            output_LOW(SEG_P);
            delay_ms(1000);
            break;
          
   case (10): OUTPUT_B(~DIG[10]);
            output_high(SEG_P);
            delay_ms(1500);
            output_LOW(SEG_P);
            delay_ms(1500);
            break;
            
   case (11): OUTPUT_B(~DIG[11]);
            output_high(SEG_P);
            delay_ms(1500);
            output_LOW(SEG_P);
            delay_ms(2000);
            break;
            
   case (12): OUTPUT_B(~DIG[12]);
            output_high(SEG_P);
            delay_ms(2000);
            output_LOW(SEG_P);
            delay_ms(500);
            break;
            
   case (13): OUTPUT_B(~DIG[13]);
            output_high(SEG_P);
            delay_ms(2000);
            output_LOW(SEG_P);
            delay_ms(1000);
            break;
 
   case (14): OUTPUT_B(~DIG[14]);
            output_high(SEG_P);
            delay_ms(2000);
            output_LOW(SEG_P);
            delay_ms(1500);
            break;
   case (15): OUTPUT_B(~DIG[15]);
            output_high(SEG_P);
            delay_ms(2000);
            output_LOW(SEG_P);
            delay_ms(2000);
            break;
 default:;

           break; 

   // CODIGO 1
 // CODIGO 2
 // CODIGO 3
 // CODIGO 4
 // CODIGO 5
  //CODIGO 6
  //CODIGO 7
  //CODIGO 8
  //CODIGO 9
  //CODIGO 10
  //CODIGO 11
  //CODIGO 12
  //CODIGO 13
  //CODIGO 14
  //CODIGO 15
  //CODIGO 16
 
  }
  
 
  }
}
  
  

